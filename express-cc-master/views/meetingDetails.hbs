{{> header }}

        <div class="container" id="main" style="display: none">

            <h1>{{title}}</h1>

            {{#if errors}}
                {{#each errors}}
                    <div class="alert alert-danger">
                        {{this.msg}}
                    </div>
                {{/each}}
            {{/if}}

                <div class="form-group" style="text-align: center">
                    <p style="display: inline-block">
                        Meeting Title: <span id="meeting_title"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        Meeting Location: <span id="meeting_location"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        Meeting Description: <span id="meeting_description"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        Meeting Length: <span id="meeting_length"></span> hours
                    </p>

                </div>

                <div class="form-group" style="text-align: center">
                    <h3 style="text-align: center">Available Dates</h3>
                    <table id="dates" style="display: inline-block">
                        <tr>
                            <th>Date</th>
                            <th>Earliest Start</th>
                            <th>Latest Start</th>
                        </tr>
                    </table>
                </div>

                <div style="text-align: center">
                    <h3 style="display: inline-block">Attendant Entries</h3>
                    <div>

                    </div>
                </div>


                <div style="text-align: center">
                    <h3 style="display: inline-block">Optimal Time</h3>

                </div>

                <div>
                    <h3 style="text-align: center">Add</h3>
                    <label>Name
                        <input type="text" id="entry_name">
                    </label>
                </div>

                <div id="meeting_option1" class="meetingOptions">
                    <div class="input-group date" data-provide="datepicker">
                        <label for="date1">Meeting Date
                        <input type="date" id="date1">
                        </label>
                    </div>
                    <br>
                    <div class="input-group clockpicker">
                        <label for="start_time1">Lowerbound Time
                        <input type="time" name="start_time1" id="start_time1"></label>
                    </div>
                    <br>
                    <div class="input-group clockpicker">
                        <label for="end_time1">Upperbound Time
                        <input type="time" name="end_time1" id="end_time1"></label>
                    </div>
                    <br>
                    <div class="input-group clockpicker">
                        <label for="pref_start1">Preferred Start Time
                            <input type="time" name="pref_start" id="pref_start1"></label>
                    </div>
                    <br>
                    <div>
                        <label> Comment
                            <textarea class="form-control" name="Comment" id="comment1" rows="2" placeholder="Comment"></textarea>
                        </label>
                    </div>
                </div>
                <div id="new_pos"></div>
                <br><br>
                <div id="create">
                    <button type="button" onClick="createDiv()" class="btn btn-success">Add</button> <br><br>
                    <button id="remove_option" type="button" onclick="removeDiv()" class="btn btn-danger" style="display: none";>Remove</button>
                </div>
                <br>
                <button type="button" onClick="submit()" class="btn btn-primary">Submit</button>
                <br><br>

                <div style="text-align: center">
                    <input type="text" style="display: inline-block" placeholder="Username" id="invitee_username"><br><br>
                    <button type="button" onclick="invite()" style="display: inline-block" class="btn btn-primary">Invite</button>
                </div>


        </div>
    </body>
<script>

    var xhttp1 = new XMLHttpRequest();
    xhttp1.open("POST", "/getMeeting", true);
    xhttp1.setRequestHeader("Content-type", "application/json");
    var params = {
        "id": window.location.href.split("/")[window.location.href.split("/").length-1]
    };
    xhttp1.send(JSON.stringify(params));
    xhttp1.onreadystatechange = function() {
        if (this.readyState == 4 && this.responseText) {
            console.log(JSON.parse(this.responseText));
            var response = JSON.parse(this.responseText);
            if (response.password)
            {
                var passInput = prompt("Please enter meeting password");
                if (passInput != response.password)
                {
                    alert("Incorrect password");
                    window.location.replace("../..");
                }
            }
            document.getElementById('main').style.display = "block";
            document.getElementById('meeting_title').innerHTML = response.title;
            document.getElementById('meeting_description').innerHTML = response.description;
            document.getElementById('meeting_location').innerHTML = response.location;
            document.getElementById('meeting_length').innerHTML = response.length;
            var options = response.options;
            var table = document.getElementById('dates');
            var row;
            options.forEach(function (option) {
                row = table.insertRow(-1);
                row.insertCell(0).innerHTML = option.date;
                row.insertCell(1).innerHTML = option.lowerboundLimit;
                row.insertCell(2).innerHTML = option.upperboundLimit;

            });

        }
    };

    var dateCounter = 1;

    function showHidePass() {
        if (document.getElementById('privacy').checked)
        {
            document.getElementById('meetingPasswordDiv').style.display = 'block';
        } else {
            document.getElementById('meetingPasswordDiv').style.display = 'none';
        }

    }
    function createDiv() {
        dateCounter++;
        var x = document.getElementById("remove_option");
        x.style.display= "block";
        var meetingOptionHTML = `
                    <div class="input-group date" data-provide="datepicker">
                        <label for="date${dateCounter}">Meeting Date
                        <input type="date" id="date${dateCounter}">
                        </label>
                    </div>
                    <br>
                    <div class="input-group clockpicker">
                        <label for="start_time${dateCounter}">Lowerbound Time
                        <input type="time" name="start_time" id="start_time${dateCounter}"></label>
                    </div>
                    <br>
                    <div class="input-group clockpicker">
                        <label for="end_time${dateCounter}">Upperbound Time
                        <input type="time" name="end_time" id="end_time${dateCounter}"></label>
                    </div>
                    <br>
                    <div class="input-group clockpicker">
                        <label for="pref_start${dateCounter}">Preferred Start Time
                        <input type="time" name="pref_start" id="pref_start${dateCounter}"></label>
                    </div>
                    <br>
                    <div>
                        <label> Comment
                            <textarea class="form-control" name="Comment" id="comment${dateCounter}" rows="2" placeholder="Comment"></textarea>
                        </label>
                    </div>`
                    ;
        var div = document.createElement('div');
        var id = "meeting_option" + dateCounter;
        div.id = id;
        div.className = "meetingOptions";
        div.innerHTML = meetingOptionHTML;
        document.getElementById("new_pos").appendChild(div);
        var newPos = document.getElementById(id);
        newPos.scrollIntoView();
    }

    function removeDiv() {
        var x = document.getElementById("remove_option");
        var elem = document.getElementById('meeting_option' + dateCounter);
        elem.parentNode.removeChild(elem);
        dateCounter--;
        if(dateCounter == 1){
            x.style.display= "none";
        }
    }

    function submit() {
        var submittable = true;
        console.log("Submitting");
        var options = [];
        for (var no = 1; no <= dateCounter; no++)
        {
            if (!document.getElementById('date'+no).value) {
                document.getElementById('date'+no).style.border = "solid #FF0000";
                submittable = false;
            }
            if (!document.getElementById('start_time'+no).value) {
                document.getElementById('start_time'+no).style.border = "solid #FF0000";
                submittable = false;
            }
            if (!document.getElementById('end_time'+no).value) {
                document.getElementById('end_time'+no).style.border = "solid #FF0000";
                submittable = false;
            }
            if (!submittable)
            {
                console.log("Error: not submittable 2");
                return;
            } else {
                options.push({"name": document.getElementById('entry_name').value, "date": document.getElementById('date'+no).value, "start_time": document.getElementById('start_time'+no).value, "end_time": document.getElementById('end_time'+no).value, "pref_start": document.getElementById('pref_start'+no).value, "comment": document.getElementById('comment'+no).value});
            }
        }
        var xhttp = new XMLHttpRequest();
        xhttp.open("POST", "/addMeetingParticipant", true);
        xhttp.setRequestHeader("Content-type", "application/json");
        var params = {
            "id": window.location.href.split("/")[window.location.href.split("/").length-1],
            "options": options
        };
        xhttp.send(JSON.stringify(params));
        xhttp.onreadystatechange = function() {
            if (this.readyState == 4 && this.responseText) {
                if (this.status === 200)
                {
                    alert("Done");
                    location.reload();
                } else
                {
                    alert("Error: " + this.responseText)
                }
            }
        };
    }

    function invite() {
        var submittable = true;
        console.log("Inviting");
        var options = [];
        if (!document.getElementById('invitee_username').value) {
            document.getElementById('invitee_username').style.border = "solid #FF0000";
            submittable = false;
        }
        if (!submittable)
        {
            console.log("Error: not submittable 2");
            return;
        } else {
            options.push({"invitee": document.getElementById('invitee_username').value});
        }
        var xhttp = new XMLHttpRequest();
        xhttp.open("POST", "/sendMeetingInvite", true);
        xhttp.setRequestHeader("Content-type", "application/json");
        var params = {
            "id": window.location.href.split("/")[window.location.href.split("/").length-1],
            "options": options
        };
        xhttp.send(JSON.stringify(params));
        xhttp.onreadystatechange = function() {
            if (this.readyState == 4 && this.responseText) {
                if (this.status === 200)
                {
                    alert("Done");
                    location.reload();
                } else
                {
                    alert("Error: " + this.responseText)
                }
            }
        };
    }

    for (var x = 1; x <= dateCounter; x++)
    {
        var slider = document.getElementById("length" + x);
        var output = document.getElementById("length_span" + x);
        output.innerHTML = slider.value;
        slider.oninput = function() {
            output.innerHTML = this.value;
        }
    }

</script>
</html>